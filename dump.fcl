#include "services_dune.fcl"
process_name: CtreeGeometry
services:
{
   @table::dunefd_simulation_services
   # TFileService: { fileName: "%ifb_detsim_hist.root" }
   TimeTracker:       {}
   MemoryTracker:         { } # default is one
   RandomNumberGenerator: {} #ART native random number generator
   # FileCatalogMetadata:  @local::art_file_catalog_mc
   # NuRandomService:       @local::random_NuRandomService  # seedservice.fcl
   # message:              @local::dune_message_services_prod
   # https://github.com/DUNE/dunecore/tree/develop/dunecore/Utilities
   #@table::dunefddphase_simulation_services #dual-phase simulation services (same plane naming, XYZ)
   #@table::dunefdvd_1x8x6_3view_simulation_services
   @table::dunefdvd_1x8x14_3view_simulation_services
   #@table::dunefdvd_1x8x6_3view_30deg_simulation_services
   #@table::dunefdvd_1x8x14_3view_30deg_simulation_services
}
### Use the 1x2x6 geometry ###
#services.Geometry: @local::dune10kt_1x2x6_geo
### Use the vertical drift geometry
#services.Geometry: @local::dunevd10kt_1x8x6_3view_geo
services.Geometry: @local::dunevd10kt_1x8x14_3view_geo
#services.Geometry: @local::dunevd10kt_1x8x6_3view_30deg_geo
#services.Geometry: @local::dunevd10kt_1x8x14_3view_30deg_geo
#source:
#{
#  module_type: RootInput
#  fileNames:  [ "gen.root" ]
#  firstEvent : 1
#  maxEvents:  -1
#}
outputs:{}
physics:
{
  analyzers:
  {
    ctree:
    {
      module_type:      "CTreeGeometry"
      saveChannelWireMap: true
    }
  }
  analysis: [ ctree ] //Directory for histograms
  end_paths: [ analysis ]
}
